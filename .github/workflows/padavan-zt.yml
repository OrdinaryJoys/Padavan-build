name: Padavan-ZeroTier-Build

on:
  workflow_dispatch:
  push:
    tags: ['v*']
  schedule:
    - cron: '0 3,20 * * *'

env:
  DEVICE: K2P
  BLOCK_SIZE: 15872
  ZT_REPO: https://github.com/zerotier/ZeroTierOne.git
  TZ: Asia/Shanghai

permissions:
  contents: write
  actions: write

jobs:
  version_check:
    runs-on: ubuntu-22.04
    outputs:
      zt_version: ${{ steps.get_version.outputs.zt_version }}
      current_version: ${{ steps.get_version.outputs.current_version }}
    steps:
      - name: Check ZeroTier updates
        id: get_version
        run: |
          latest_ver=$(curl -s https://api.github.com/repos/zerotier/ZeroTierOne/releases/latest | jq -r '.tag_name')
          current_ver=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name')
          echo "zt_version=$latest_ver" >> $GITHUB_OUTPUT
          echo "current_version=$current_ver" >> $GITHUB_OUTPUT

  build:
    needs: version_check
    if: ${{ needs.version_check.outputs.zt_version != needs.version_check.outputs.current_version }}
    strategy:
      matrix:
        target: [mipsel, arm7l]
      fail-fast: false
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    steps:
      # ========== Repository Setup ==========
      - name: Clone Padavan base
        uses: actions/checkout@v4
        with:
          repository: hanwckf/padavan-4.4
          path: padavan-src
          ref: master  # 使用仓库实际分支
          fetch-depth: 0

      - name: Validate repository structure
        run: |
          echo "Current workspace:"
          ls -la
          echo "Padavan source structure:"
          ls -la padavan-src/
          
          # 关键目录验证
          REQUIRED_DIRS=(
            "padavan-src/trunk"
            "padavan-src/toolchain-mipsel"
            "padavan-src/toolchain-mipsel/scripts"
          )
          
          for dir in "${REQUIRED_DIRS[@]}"; do
            if [ ! -d "$dir" ]; then
              echo "::error::Missing required directory: $dir"
              exit 1
            fi
          done
          
          echo "✅ All required directories exist"

      # ========== Toolchain Setup ==========
      - name: Setup toolchain
        run: |
          cd padavan-src/toolchain-mipsel
          echo "Current toolchain directory: $(pwd)"
          
          # 验证工具链脚本
          if [ ! -f "dl_toolchain.sh" ]; then
            echo "::error::Missing dl_toolchain.sh in $(pwd)"
            exit 1
          fi
          
          # 架构参数映射
          case ${{ matrix.target }} in
            mipsel)
              ARCH_PARAM="mipsel"
              TOOLCHAIN_DIR="toolchain-4.4.x"
              ;;
            arm7l)
              ARCH_PARAM="arm"
              TOOLCHAIN_DIR="toolchain-3.4.x"
              ;;
          esac

          # 增强重试逻辑
          max_retries=5
          attempt=1
          success=false
          
          while [ $attempt -le $max_retries ]; do
            echo "▶️ Toolchain download attempt $attempt/$max_retries"
            log_file="toolchain_$attempt.log"
            
            if ./dl_toolchain.sh $ARCH_PARAM 2>&1 | tee "$log_file"; then
              if [ -d "$TOOLCHAIN_DIR/bin" ]; then
                success=true
                echo "✅ Toolchain verification passed"
                break
              fi
            fi
            
            sleep_time=$((30 + RANDOM % 30))
            echo "⏳ Waiting ${sleep_time}s before retry..."
            sleep $sleep_time
            ((attempt++))
          done

          if [ "$success" = false ]; then
            echo "::error::All toolchain download attempts failed!"
            echo "=== Error Logs Summary ==="
            grep -iE 'error|fail|not found' toolchain_*.log || true
            exit 1
          fi
          
          echo "TOOLCHAIN_PATH=$(pwd)/$TOOLCHAIN_DIR/bin" >> $GITHUB_ENV

      # ========== Build Process ==========
      - name: Prepare ZeroTier source
        run: |
          git clone --depth 1 --branch ${{ needs.version_check.outputs.zt_version }} $ZT_REPO zerotier-src
          [ -d "zerotier-src" ] || { echo "::error::ZeroTier clone failed"; exit 1; }

      - name: Integrate ZeroTier
        run: |
          mkdir -p padavan-src/trunk/user/zerotier
          cp -rv zerotier-src/* padavan-src/trunk/user/zerotier/
          
          cd padavan-src/trunk
          sed -i '/CFLAGS += -Os/s/$/ -Wno-error=format-truncation/' user/zerotier/Makefile
          echo "LIBS += -ljson-c -latomic" >> user/zerotier/Makefile
          
          cat << EOF >> .config
          CONFIG_FIRMWARE_INCLUDE_ZEROTIER=y
          CONFIG_FIRMWARE_INCLUDE_ZEROTIER_UI=y
          CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=y
          EOF

      - name: Build firmware
        run: |
          cd padavan-src/trunk
          ./clear_tree
          
          export PATH="$TOOLCHAIN_PATH:$PATH"
          export CC=${{ matrix.target }}-linux-uclibc-gcc
          
          timeout 60m fakeroot ./build_firmware_modify $DEVICE $BLOCK_SIZE 2>&1 | tee build.log
          
          if [ ! -f "images/$DEVICE.trx" ]; then
            echo "::error::Firmware build failed"
            echo "=== Build Log Tail ==="
            tail -n 200 build.log
            exit 1
          fi

      - name: Package artifacts
        run: |
          cd padavan-src/trunk/images
          upx --best --lzma $DEVICE.trx
          
          md5sum $DEVICE.trx > checksum.md5
          sha256sum $DEVICE.trx > checksum.sha256
          
          archive_name="$DEVICE-${{ matrix.target }}-zt-${{ needs.version_check.outputs.zt_version }}.tar.gz"
          tar czvf $archive_name $DEVICE.trx checksum.*

      - name: Upload release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.version_check.outputs.zt_version }}
          files: |
            padavan-src/trunk/images/*.tar.gz

  keepalive:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: gautamkrishnar/keepalive-workflow@v2
