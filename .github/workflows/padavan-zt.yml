name: Padavan-ZeroTier-Build

on:
  workflow_dispatch:
  push:
    tags: ['v*']
  schedule:
    - cron: '0 3,20 * * *'

env:
  DEVICE: K2P
  BLOCK_SIZE: 15872
  ZT_REPO: https://github.com/zerotier/ZeroTierOne.git
  PADAVAN_REPO: https://github.com/hanwckf/padavan-4.4.git
  TZ: Asia/Shanghai

permissions:
  contents: write
  actions: write

jobs:
  version_check:
    runs-on: ubuntu-22.04
    outputs:
      zt_version: ${{ steps.get_version.outputs.zt_version }}
      current_version: ${{ steps.get_version.outputs.current_version }}
    steps:
      - name: Check ZeroTier updates
        id: get_version
        run: |
          latest_ver=$(curl -s https://api.github.com/repos/zerotier/ZeroTierOne/releases/latest | jq -r '.tag_name')
          current_ver=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name')
          echo "zt_version=$latest_ver" >> $GITHUB_OUTPUT
          echo "current_version=$current_ver" >> $GITHUB_OUTPUT

  build:
    needs: version_check
    if: ${{ needs.version_check.outputs.zt_version != needs.version_check.outputs.current_version }}
    strategy:
      matrix:
        target: [mipsel, arm7l]
      fail-fast: false
    runs-on: ubuntu-22.04
    timeout-minutes: 90

    steps:
      - name: Clone Padavan base
        uses: actions/checkout@v4
        with:
          repository: hanwckf/padavan-4.4
          path: padavan-src
          ref: main
          fetch-depth: 0

      - name: Verify directory structure
        run: |
          echo "Current directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          echo "Padavan source directory:"
          ls -la padavan-src/
          
          [ -d "padavan-src/toolchain" ] || {
            echo "::error::Missing toolchain directory"
            exit 1
          }

      - name: Setup build environment
        run: |
          sudo apt-get update -y
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \
            unzip libtool-bin curl cmake gperf gawk flex bison \
            fakeroot kmod cpio git python3-docutils gettext automake \
            texinfo build-essential help2man pkg-config zlib1g-dev libgmp3-dev \
            libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev libssl-dev \
            libjson-c-dev jq upx libatomic1

      - name: Setup toolchain
        run: |
          cd padavan-src/toolchain
          chmod +x scripts/dl_toolchain.sh
          
          max_retries=5
          success=false
          
          for ((i=1; i<=max_retries; i++)); do
            echo "▶️ Toolchain download attempt $i/$max_retries"
            log_file="toolchain_$i.log"
            
            if ./scripts/dl_toolchain.sh ${{ matrix.target }} 2>&1 | tee "$log_file"; then
              if [ -d "toolchain-4.4.x/bin" ]; then
                success=true
                break
              fi
            fi
            sleep $((20 + RANDOM % 40))
          done

          if [ "$success" = false ]; then
            echo "::error::Toolchain download failed"
            echo "=== Last 100 lines of logs ==="
            tail -n 100 toolchain_*.log
            exit 1
          fi
          echo "TOOLCHAIN_PATH=$(pwd)/toolchain-4.4.x/bin" >> $GITHUB_ENV

      - name: Prepare ZeroTier source
        run: |
          git clone --depth 1 --branch ${{ needs.version_check.outputs.zt_version }} $ZT_REPO zerotier-src
          [ -d "zerotier-src" ] || { echo "::error::ZeroTier clone failed"; exit 1; }

      - name: Integrate ZeroTier
        run: |
          mkdir -p padavan-src/trunk/user/zerotier
          cp -rv zerotier-src/* padavan-src/trunk/user/zerotier/
          
          cd padavan-src/trunk
          sed -i '/CFLAGS += -Os/s/$/ -Wno-error=format-truncation/' user/zerotier/Makefile
          echo "LIBS += -ljson-c -latomic" >> user/zerotier/Makefile
          
          cat << EOF >> .config
          CONFIG_FIRMWARE_INCLUDE_ZEROTIER=y
          CONFIG_FIRMWARE_INCLUDE_ZEROTIER_UI=y
          CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=y
          EOF

      - name: Build firmware
        run: |
          cd padavan-src/trunk
          ./clear_tree
          
          export PATH="$TOOLCHAIN_PATH:$PATH"
          export CC=${{ matrix.target }}-linux-uclibc-gcc
          
          timeout 45m fakeroot ./build_firmware_modify $DEVICE $BLOCK_SIZE 2>&1 | tee build.log
          
          [ -f "images/$DEVICE.trx" ] || { 
            echo "::error::Build failed"
            tail -n 100 build.log
            exit 1
          }

      - name: Package artifacts
        run: |
          cd padavan-src/trunk/images
          upx --best --lzma $DEVICE.trx
          
          md5sum $DEVICE.trx > checksum.md5
          sha256sum $DEVICE.trx > checksum.sha256
          
          tar czvf $DEVICE-${{ matrix.target }}-${{ needs.version_check.outputs.zt_version }}.tar.gz \
            $DEVICE.trx \
            checksum.md5 \
            checksum.sha256

      - name: Upload release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.version_check.outputs.zt_version }}
          files: |
            padavan-src/trunk/images/*.tar.gz
            padavan-src/trunk/images/checksum.*

  keepalive_workflow:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: gautamkrishnar/keepalive-workflow@v2
