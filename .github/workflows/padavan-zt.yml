name: Padavan-ZeroTier-Build

on:
  workflow_dispatch:
  push:
    tags: ['v*']

env:
  DEVICE: K2P
  BLOCK_SIZE: 15872
  ZT_REPO: https://github.com/zerotier/ZeroTierOne.git
  TOOLCHAIN_URL: https://github.com/hanwckf/padavan-4.4/releases/download/toolchain/mipsel-4.4.x.tar.xz
  TOOLCHAIN_SHA256: 8b7cc6316a9c3bc2dbb53d77d3b5f60d4b0d0453c0a1a3f3a7a3a3a3a3a3a3a3a  # 替换实际SHA256值

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    steps:
    # ========== 仓库克隆 ==========
    - name: Clone Padavan repository
      uses: actions/checkout@v4
      with:
        repository: hanwckf/padavan-4.4
        path: padavan-src
        ref: main
        fetch-depth: 100

    # ========== 系统诊断 ==========
    - name: System diagnostics
      run: |
        echo "=== 系统信息 ==="
        uname -a
        lsb_release -a
        echo "=== 磁盘空间 ==="
        df -h
        echo "=== 内存信息 ==="
        free -m

    # ========== 工具链配置 ==========
    - name: Setup verified toolchain
      id: toolchain
      run: |
        cd padavan-src/toolchain-mipsel
        
        # 清理旧文件
        rm -rf toolchain-4.4.x *.tar.xz

        # 分阶段下载
        echo "▷ 阶段1：下载工具链 (SHA256: $TOOLCHAIN_SHA256)"
        if ! wget -q --show-progress --progress=bar:force:noscroll "$TOOLCHAIN_URL"; then
          echo "::error::下载失败，尝试备用方法..."
          curl -L -o "${TOOLCHAIN_URL##*/}" "$TOOLCHAIN_URL" || exit 1
        fi

        # 文件验证
        echo "▷ 阶段2：文件验证"
        FILE_NAME="${TOOLCHAIN_URL##*/}"
        echo "文件类型检测: $(file $FILE_NAME)"
        echo "头部校验: $(head -c 4 $FILE_NAME | hexdump -C)"
        
        if ! sha256sum -c <<< "$TOOLCHAIN_SHA256  $FILE_NAME"; then
          echo "::error::文件校验失败 (实际: $(sha256sum $FILE_NAME | cut -d' ' -f1))"
          exit 1
        fi

        # 解压验证
        echo "▷ 阶段3：解压工具链"
        mkdir -p toolchain-4.4.x
        tar -xJvf "$FILE_NAME" -C toolchain-4.4.x --strip-components=1 2>&1 | tee tar.log || {
          echo "::error::解压失败，最后5行日志:"
          tail -5 tar.log
          echo "解压命令回显:"
          tar -tvf "$FILE_NAME" | head -10
          exit 1
        }

        # 编译器验证
        echo "▷ 阶段4：验证工具链"
        COMPILER="toolchain-4.4.x/bin/mipsel-linux-uclibc-gcc"
        if [ ! -x "$COMPILER" ]; then
          echo "::error::编译器缺失，目录内容:"
          ls -lR toolchain-4.4.x/bin/
          exit 1
        fi
        echo "编译器版本:"
        "$COMPILER" --version

        echo "TOOLCHAIN_PATH=$(pwd)/toolchain-4.4.x/bin" >> $GITHUB_ENV

    # ========== ZeroTier集成 ==========
    - name: Integrate ZeroTier
      run: |
        set -ex
        git clone --depth 1 --branch $(curl -s https://api.github.com/repos/zerotier/ZeroTierOne/releases/latest | jq -r .tag_name) "$ZT_REPO" zerotier-src
        
        mkdir -p padavan-src/trunk/user/zerotier
        cp -rv zerotier-src/* padavan-src/trunk/user/zerotier/
        
        cd padavan-src/trunk
        sed -i'' -e '/CFLAGS += -Os/s/$/ -Wno-error=format-truncation/' \
                 -e '/^LIBS/s/$/ -ljson-c -latomic/' \
                 user/zerotier/Makefile
        
        cat << EOF >> .config
        CONFIG_FIRMWARE_INCLUDE_ZEROTIER=y
        CONFIG_FIRMWARE_INCLUDE_ZEROTIER_UI=y
        CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=y
        EOF

    # ========== 构建过程 ==========
    - name: Build firmware
      run: |
        cd padavan-src/trunk
        ./clear_tree || true
        
        export PATH="$TOOLCHAIN_PATH:$PATH"
        export CC=mipsel-linux-uclibc-gcc
        
        # 内存优化编译
        JOBS=$(($(nproc)*2/3))
        echo "▷ 使用并行任务数: $JOBS"
        
        /usr/bin/time -v \
        fakeroot ./build_firmware_modify "$DEVICE" "$BLOCK_SIZE" -j"$JOBS" \
          2>&1 | tee build.log

        [ -f "images/$DEVICE.trx" ] || {
          echo "::error::固件未生成，可能原因："
          echo "1. 编译中途失败"
          echo "2. 输出路径错误"
          ls -l images/
          exit 1
        }

    # ========== 产物处理 ==========
    - name: Package artifacts
      run: |
        cd padavan-src/trunk/images
        upx --best --lzma "$DEVICE.trx" || echo "UPX压缩失败，继续..."
        
        md5sum "$DEVICE.trx" > checksum.md5
        sha256sum "$DEVICE.trx" > checksum.sha256
        
        tar czvf "$DEVICE-zt-build-$(date +%Y%m%d).tar.gz" \
          "$DEVICE.trx" \
          checksum.*

    # ========== 错误诊断 ==========
    - name: Failure diagnostics
      if: ${{ failure() }}
      run: |
        echo "=== 工具链状态 ==="
        ls -l padavan-src/toolchain-mipsel/toolchain-4.4.x/bin || true
        
        echo "=== 构建日志摘要 ==="
        if [ -f "padavan-src/trunk/build.log" ]; then
          grep -iE 'error:|warning:|undefined' padavan-src/trunk/build.log | head -100
        else
          echo "构建日志不存在"
        fi
        
        echo "=== 系统诊断 ==="
        dmesg | tail -20
        journalctl -b --since "10 minutes ago" | grep -i oom

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware-packages
        path: |
          padavan-src/trunk/images/*.tar.gz
          padavan-src/trunk/build.log
