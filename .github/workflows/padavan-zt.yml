name: Padavan-ZeroTier-Build

on:
  workflow_dispatch:
  push:
    tags: ['v*']

env:
  DEVICE: K2P
  BLOCK_SIZE: 15872
  ZT_REPO: https://github.com/zerotier/ZeroTierOne.git
  PADAVAN_REPO: https://github.com/hanwckf/padavan-4.4.git

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    # ========== Repository Setup ==========
    - name: Clone Padavan base
      uses: actions/checkout@v4
      with:
        repository: hanwckf/padavan-4.4
        path: padavan
        ref: master

    - name: Checkout current repo
      uses: actions/checkout@v4
      with:
        submodules: recursive

    # ========== Build Environment ==========
    - name: Set build timestamp
      id: timestamp
      run: echo "BUILD_TIMESTAMP=$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT

    - name: Install dependencies
      run: |
        sudo apt-get update -y
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \
          unzip libtool-bin curl cmake gperf gawk flex bison \
          fakeroot kmod cpio git python3-docutils gettext automake \
          texinfo build-essential help2man pkg-config zlib1g-dev libgmp3-dev \
          libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev libssl-dev \
          libjson-c-dev jq upx libatomic1

    # ========== ZeroTier Source ==========
    - name: Prepare ZeroTier source
      run: |
        for i in {1..3}; do
          git clone --depth 1 --branch $(curl -s https://api.github.com/repos/zerotier/ZeroTierOne/releases/latest | jq -r .tag_name) \
            $ZT_REPO zerotier-src && break || sleep 30
        done
        [ -d "zerotier-src" ] || { echo "::error::ZeroTier clone failed"; exit 1; }
        echo "ZT_VERSION=$(cd zerotier-src && git describe --tags)" >> $GITHUB_ENV

    # ========== Toolchain Management ==========
    - name: Cache toolchain
      uses: actions/cache@v3
      id: toolchain-cache
      with:
        path: padavan/toolchain/toolchain-4.4.x
        key: padavan-toolchain-${{ hashFiles('**/make-linux.mk') }}

    - name: Setup toolchain
      if: steps.toolchain-cache.outputs.cache-hit != 'true'
      run: |
        cd padavan/toolchain
        chmod +x scripts/dl_toolchain.sh
        
        for i in {1..5}; do
          echo "Attempt $i/5"
          if ./scripts/dl_toolchain.sh mipsel 2>&1 | tee toolchain.log; then
            echo "::notice::Toolchain downloaded successfully"
            break
          else
            echo "::warning::Download failed, retrying in 30s..."
            sleep 30
          fi
        done

        if [ ! -d "toolchain-4.4.x/bin" ]; then
          echo "::error::❌ All download attempts failed!"
          echo "=== Log Dump ==="
          cat toolchain.log
          exit 1
        fi
        echo "TOOLCHAIN_PATH=$(pwd)/toolchain-4.4.x/bin" >> $GITHUB_ENV

    # ========== Integration ==========
    - name: Integrate ZeroTier
      run: |
        # Copy custom modifications
        cp -rv zerotier-src padavan/trunk/user/zerotier
        
        # Apply patches
        cd padavan/trunk
        sed -i '/CFLAGS += -Os/s/$/ -Wno-error=format-truncation/' user/zerotier/Makefile
        echo "LIBS += -ljson-c -latomic" >> user/zerotier/Makefile
        
        # Update firmware config
        cat << EOF >> .config
        CONFIG_FIRMWARE_INCLUDE_ZEROTIER=y
        CONFIG_FIRMWARE_INCLUDE_ZEROTIER_UI=y
        CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=y
        EOF

    # ========== Build Process ==========
    - name: Build firmware
      run: |
        cd padavan/trunk
        ./clear_tree
        
        export PATH="$TOOLCHAIN_PATH:$PATH"
        export CC=mipsel-linux-uclibc-gcc
        export STRIP=mipsel-linux-uclibc-strip
        
        fakeroot ./build_firmware_modify $DEVICE $BLOCK_SIZE 2>&1 | tee build.log
        
        if [ ! -f "images/$DEVICE.trx" ]; then
          echo "::error::Firmware build failed"
          echo "=== Build Log Tail ==="
          tail -n 100 build.log
          exit 1
        fi

    # ========== Artifacts ==========
    - name: Package release
      run: |
        cd padavan/trunk/images
        upx --best --lzma $DEVICE.trx
        
        # Generate checksums
        md5sum $DEVICE.trx > checksum.md5
        sha256sum $DEVICE.trx > checksum.sha256
        
        # Create archive
        tar czvf $DEVICE-zt-${{ env.ZT_VERSION }}.tar.gz \
          $DEVICE.trx \
          checksum.md5 \
          checksum.sha256

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: $DEVICE-ZeroTier-${{ env.ZT_VERSION }}
        path: padavan/trunk/images/*.tar.gz
