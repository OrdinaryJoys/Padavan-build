name: Padavan AutoBuilder with ZeroTier WebUI

on:
  workflow_dispatch:
  push:
    tags: ['v*']

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      DEVICE: K2P
      BLOCK_SIZE: 15872
      ZT_ENABLED: "y"
      TOOLCHAIN_DIR: ${{ github.workspace }}/padavan-4.4/toolchain-mipsel/toolchain-4.4.x

    steps:
    # ========== 初始化设置 ==========
    - name: Set build timestamp
      run: |
        echo "BUILD_TIMESTAMP=$(date +%Y%m%d-%H%M%S)" >> $GITHUB_ENV

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        path: main-repo

    # ========== 获取ZeroTier源码 ==========
    - name: Clone ZeroTier source
      uses: actions/checkout@v4
      with:
        repository: zerotier/ZeroTierOne
        path: zerotier-src

    # ========== 安装依赖 ==========
    - name: Install dependencies
      run: |
        sudo apt-get update -y
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \
          build-essential libncurses5-dev cmake flex bison gperf \
          python3-pip python3-setuptools python3-wheel ninja-build \
          libssl-dev libjson-c-dev zlib1g-dev jq

    # ========== 准备编译环境 ==========
    - name: Prepare build environment
      run: |
        git clone --depth=1 https://github.com/hanwckf/padavan-4.4.git
        cd padavan-4.4/toolchain-mipsel
        ./dl_toolchain.sh
        echo "${{ github.workspace }}/padavan-4.4/toolchain-mipsel/toolchain-4.4.x/bin" >> $GITHUB_PATH

    # ========== 集成ZeroTier和Web界面 ==========
    - name: Integrate ZeroTier with WebUI
      run: |
        cd padavan-4.4/trunk
        
        # 创建必要目录
        mkdir -p user/www/n56u_ribbon_fixed/zerotier
        mkdir -p user/www/cgi-bin
        mkdir -p user/scripts

        # 复制Web界面文件
        cp ${{ github.workspace }}/main-repo/zt-ui/zerotier.asp user/www/n56u_ribbon_fixed/
        cp ${{ github.workspace }}/main-repo/zt-ui/zt.css user/www/n56u_ribbon_fixed/zerotier/
        cp ${{ github.workspace }}/main-repo/zt-ui/zerotier_api.cgi user/www/cgi-bin/
        chmod +x user/www/cgi-bin/zerotier_api.cgi

        # 添加菜单入口
        sed -i '/menuinfo\.push(/a\  menuinfo.push(["zerotier.asp", "ZeroTier网络"]);' user/www/n56u_ribbon_fixed/state.js

        # 集成ZeroTier源码
        mkdir -p user/zerotier
        cp -r ${{ github.workspace }}/zerotier-src/* user/zerotier/

        # 创建启动脚本
        cat > user/scripts/post_wan_script.sh <<'EOF'
        #!/bin/sh
        [ $(nvram get zt_enable) = "1" ] && {
            zerotier-one -d
            sleep 5
            zerotier-cli join $(nvram get zt_network)
        }
        EOF
        chmod +x user/scripts/post_wan_script.sh

        # 创建ZeroTier Makefile
        cat > user/zerotier/Makefile <<'EOF'
        include $(TOPDIR)/rules.mk
        PKG_NAME:=zerotier
        PKG_VERSION:=$(shell git -C $(CURDIR) describe --tags)
        
        include $(INCLUDE_DIR)/package.mk
        
        define Package/zerotier
          SECTION:=net
          CATEGORY:=Network
          TITLE:=ZeroTier One
          DEPENDS:=+libpthread +libstdcpp +kmod-tun +libopenssl +libjson-c
        endef
        
        CONFIGURE_ARGS += \
          --host=mipsel-linux-uclibc \
          --enable-static \
          --disable-selinux \
          ZT_ENABLE_NETWORK_CONTROLLER=0
        
        define Build/Compile
          $(MAKE) -C $(PKG_BUILD_DIR)/one \
            CC="$(TARGET_CC)" \
            CXX="$(TARGET_CXX)" \
            STRIP="$(TARGET_STRIP)"
        endef
        
        define Package/zerotier/install
          $(INSTALL_DIR) $(1)/usr/bin
          $(INSTALL_BIN) $(PKG_BUILD_DIR)/one/zerotier-one $(1)/usr/bin/
          ln -sf zerotier-one $(1)/usr/bin/zerotier-cli
          ln -sf zerotier-one $(1)/usr/bin/zerotier-idtool
        endef
        
        $(eval $(call BuildPackage,zerotier))
        EOF

    # ========== 配置固件 ==========
    - name: Configure firmware
      run: |
        cd padavan-4.4/trunk
        make ${DEVICE}_defconfig
        ./scripts/config --set-val CONFIG_FIRMWARE_INCLUDE_ZEROTIER y
        ./scripts/config --set-val CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE y
        ./scripts/config --set-val CONFIG_FIRMWARE_INCLUDE_JQ y
        make oldconfig

    # ========== 编译固件 ==========
    - name: Build firmware
      run: |
        cd padavan-4.4/trunk
        make -j$(nproc) all V=s
        mkdir -p ${{ github.workspace }}/output
        cp images/*.trx ${{ github.workspace }}/output/

    # ========== 上传产物 ==========
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.DEVICE }}_ZT_UI_${{ env.BUILD_TIMESTAMP }}
        path: ${{ github.workspace }}/output/*.trx
