name: Padavan-ZeroTier-Build

on:
  workflow_dispatch:
  push:
    tags: ['v*']

env:
  DEVICE: K2P
  BLOCK_SIZE: 15872
  ZT_REPO: https://github.com/zerotier/ZeroTierOne.git
  TOOLCHAIN_URL: https://cdn.jsdelivr.net/gh/hanwckf/padavan-4.4@toolchain/mipsel-4.4.x.tar.xz
  TOOLCHAIN_SHA256: 0019dfc4b32d63c1392aa264aed2253c1e0c2fb09216f8e2cc269bbfb8bb49b5

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    steps:
    # ========== 系统初始化 ==========
    - name: Prepare environment
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          ca-certificates curl xz-utils \
          python3 python3-pip jq

    # ========== 仓库克隆 ==========
    - name: Clone repositories
      uses: actions/checkout@v4
      with:
        repository: hanwckf/padavan-4.4
        path: padavan-src
        ref: main
        fetch-depth: 100
        lfs: true

    # ========== 工具链管理 ==========
    - name: Setup toolchain (stable)
      id: toolchain
      run: |
        cd padavan-src/toolchain-mipsel
        
        # 清理环境
        rm -rf toolchain-4.4.x *.tar.xz

        # 分片下载（带重试）
        for i in {1..5}; do
          echo "▶ Download attempt $i/5"
          if curl -L -C - --retry 3 --retry-delay 10 \
             -o toolchain.tar.xz "$TOOLCHAIN_URL"; then
            break
          fi
          sleep $((i*10))
        done

        # 完整性验证
        echo "▷ Actual SHA256: $(sha256sum toolchain.tar.xz | cut -d' ' -f1)"
        if ! sha256sum -c <<< "$TOOLCHAIN_SHA256  toolchain.tar.xz"; then
          echo "::error::校验失败！请验证下载链接和校验值"
          echo "手动验证命令："
          echo "curl -LO $TOOLCHAIN_URL && sha256sum toolchain.tar.xz"
          exit 1
        fi

        # 解压验证
        mkdir -p toolchain-4.4.x
        tar -xJvf toolchain.tar.xz -C toolchain-4.4.x --strip-components=1 || {
          echo "::error::解压失败！可能原因："
          echo "1. 使用命令手动验证: tar -tvJf toolchain.tar.xz | head"
          exit 1
        }

        # 编译器验证
        COMPILER="toolchain-4.4.x/bin/mipsel-linux-uclibc-gcc"
        [ -x "$COMPILER" ] || {
          echo "::error::编译器缺失，目录内容："
          ls -lR toolchain-4.4.x/bin/
          exit 1
        }
        echo "TOOLCHAIN_PATH=$(pwd)/toolchain-4.4.x/bin" >> $GITHUB_ENV

    # ========== ZeroTier集成 ==========
    - name: Integrate ZeroTier
      run: |
        set -ex
        git clone --depth 1 --branch $(curl -s https://api.github.com/repos/zerotier/ZeroTierOne/releases/latest | jq -r .tag_name) "$ZT_REPO" zerotier-src
        
        mkdir -p padavan-src/trunk/user/zerotier
        cp -rv zerotier-src/* padavan-src/trunk/user/zerotier/
        
        cd padavan-src/trunk
        sed -i'' -e '/CFLAGS += -Os/s/$/ -Wno-error=format-truncation/' \
                 -e '/^LIBS/s/$/ -ljson-c -latomic/' \
                 user/zerotier/Makefile
        
        cat << EOF >> .config
        CONFIG_FIRMWARE_INCLUDE_ZEROTIER=y
        CONFIG_FIRMWARE_INCLUDE_ZEROTIER_UI=y
        CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=y
        CONFIG_FIRMWARE_OPTIMIZE_SIZE=y
        EOF

    # ========== 构建优化 ==========
    - name: Build firmware (optimized)
      run: |
        cd padavan-src/trunk
        ./clear_tree
        
        export PATH="$TOOLCHAIN_PATH:$PATH"
        export CC=mipsel-linux-uclibc-gcc
        export STRIP=mipsel-linux-uclibc-strip
        
        # 内存优化编译
        JOBS=$(($(nproc)*3/4))
        echo "▷ 使用并行任务数: $JOBS"
        
        /usr/bin/time -v \
        fakeroot ./build_firmware_modify "$DEVICE" "$BLOCK_SIZE" -j"$JOBS" \
          2>&1 | tee build.log

        [ -f "images/$DEVICE.trx" ] || {
          echo "::error::构建失败！最后10行日志："
          tail -10 build.log
          exit 1
        }

    # ========== 产物处理 ==========
    - name: Package artifacts
      run: |
        cd padavan-src/trunk/images
        [ -f "$DEVICE.trx" ] || exit 1
        
        # 压缩优化
        if command -v upx &>/dev/null; then
          upx --best --lzma "$DEVICE.trx" || true
        fi
        
        # 生成校验文件
        {
          md5sum "$DEVICE.trx"
          sha256sum "$DEVICE.trx"
        } | tee checksums.txt
        
        # 打包
        tar czvf "$DEVICE-zt-$(date +%Y%m%d).tar.gz" \
          "$DEVICE.trx" \
          checksums.txt

    # ========== 错误诊断 ==========
    - name: Post-mortem analysis
      if: ${{ failure() }}
      run: |
        echo "=== 系统诊断 ==="
        free -m
        df -h
        dmesg | tail -20

        echo "=== 构建日志摘要 ==="
        if [ -f "padavan-src/trunk/build.log" ]; then
          grep -iE 'error:|warning:|undefined' padavan-src/trunk/build.log | head -100
        else
          echo "构建日志不存在"
        fi

        echo "=== 网络验证 ==="
        ping -c 4 github.com
        curl -I https://github.com

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware-packages
        path: |
          padavan-src/trunk/images/*.tar.gz
          padavan-src/trunk/build.log
