name: Padavan AutoBuilder

on:
  workflow_dispatch:
  push:
    tags: ['v*']

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      DEVICE: K2P
      BLOCK_SIZE: 15872
      ZT_ENABLED: "y"
      TOOLCHAIN_DIR: ${{ github.workspace }}/padavan-4.4/toolchain-mipsel/toolchain-4.4.x

    steps:
    # ========== 代码检出 ==========
    - name: Checkout code
      uses: actions/checkout@v4

    # ========== 依赖安装 ==========
    - name: Install dependencies
      run: |
        sudo apt-get update -y
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
          unzip libtool-bin curl cmake gperf gawk flex bison \
          fakeroot kmod cpio git python3-docutils gettext automake autopoint \
          texinfo build-essential help2man pkg-config zlib1g-dev libgmp3-dev \
          libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget libc-dev-bin \
          libssl-dev libjson-c-dev libc6-i386

    # ========== 源码准备 ==========
    - name: Prepare source
      run: |
        git clone --depth=1 https://github.com/hanwckf/padavan-4.4.git || { echo "::error::Clone failed"; exit 1; }
        cd padavan-4.4/toolchain-mipsel
        ./dl_toolchain.sh || { echo "::error::Toolchain download failed"; exit 1; }
        
        # 验证工具链完整性
        [ -x "toolchain-4.4.x/bin/mipsel-linux-uclibc-gcc" ] || {
          echo "::error::Compiler not found"
          ls -lR toolchain-4.4.x/bin
          exit 1
        }
        
        sudo mkdir -p /opt/images

    # ========== 路径修复阶段 ==========
    - name: Fix toolchain paths
      run: |
        cd padavan-4.4/trunk
        
        # 修复内核Makefile路径
        sed -i "s|/toolchain-4.4.x|$TOOLCHAIN_DIR|g" linux-4.4.x/Makefile
        sed -i "s|CROSS_COMPILE := .*|CROSS_COMPILE := $TOOLCHAIN_DIR/bin/mipsel-linux-uclibc-|g" linux-4.4.x/arch/mips/Makefile
        
        # 修复根目录Makefile
        sed -i "s|CROSS_COMPILE = .*|CROSS_COMPILE = $TOOLCHAIN_DIR/bin/mipsel-linux-uclibc-|g" Makefile

    # ========== 配置阶段 ==========
    - name: Configure firmware
      run: |
        cd padavan-4.4/trunk
        cp -vf configs/templates/${DEVICE}.config .config
        
        # 应用配置修改
        {
          echo "CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=y"
          echo "CONFIG_FIRMWARE_INCLUDE_ZEROTIER=${ZT_ENABLED}"
        } >> .config
        
        # 设置绝对路径环境变量
        echo "export PATH=$TOOLCHAIN_DIR/bin:$PATH" >> build_env
        echo "export CROSS_COMPILE=$TOOLCHAIN_DIR/bin/mipsel-linux-uclibc-" >> build_env
        source build_env

    # ========== 构建阶段 ==========
    - name: Build firmware
      run: |
        cd padavan-4.4/trunk
        source build_env
        
        # 验证环境变量
        echo "=== Compiler Path ==="
        which mipsel-linux-uclibc-gcc
        echo "=== Compiler Version ==="
        mipsel-linux-uclibc-gcc --version || true
        
        # 完整构建流程
        fakeroot ./build_firmware_modify ${DEVICE} ${BLOCK_SIZE} 2>&1 | tee build.log
        
        # 处理构建结果
        if [ ! -f images/*.trx ]; then
          echo "::error::Build failed, last 50 lines:"
          tail -n 50 build.log
          exit 1
        fi
        sudo mv images/*.trx /opt/images/

    # ========== 产物上传 ==========
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.DEVICE }}-Firmware-$(date +%Y%m%d-%H%M%S)
        path: /opt/images/*.trx
