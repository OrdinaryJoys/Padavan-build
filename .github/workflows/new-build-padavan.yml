name: Padavan-ZeroTier-Build

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    env:
      DEVICE_MODEL: K2P          # 需修改为你的设备型号
      BLOCK_SIZE: 16064          # 设备闪存块大小（单位KB）
      UI_ENABLE: true            # 启用Web界面控制

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Environment
      run: |
        sudo sed -i 's/azure.archive.ubuntu.com/archive.ubuntu.com/g' /etc/apt/sources.list
        sudo apt update -y
        sudo apt install -y \
          cmake libssl-dev libnatpmp-dev \
          python2.7 python3-pip

    - name: Clone Source
      run: |
        git clone --depth=1 --shallow-submodules https://github.com/hanwckf/padavan-4.4.git
        cd padavan-4.4/toolchain-mipsel
        ./dl_toolchain.sh

    - name: Configure Build
      run: |
        cd padavan-4.4/trunk
        
        # 验证设备配置模板
        [ ! -f "configs/templates/$DEVICE_MODEL.config" ] && exit 1
        
        # 应用基础配置
        cp configs/templates/$DEVICE_MODEL.config .config
        
        # 空间优化配置
        sed -i '/CONFIG_FIRMWARE_PRODUCT_ID/d' .config
        echo "CONFIG_FIRMWARE_PRODUCT_ID=\"$DEVICE_MODEL-ZT\"" >> .config
        
        # 功能开关清理
        declare -a CONFIG_CLEAN=(
          "CONFIG_FIRMWARE_INCLUDE_ZEROTIER"
          "CONFIG_FIRMWARE_INCLUDE_ADBYBY"
          "CONFIG_FIRMWARE_INCLUDE_XRAY"
          "CONFIG_FIRMWARE_INCLUDE_V2RAY"
        )
        for item in "${CONFIG_CLEAN[@]}"; do
          sed -i "/$item/d" .config
        done

        # 写入ZeroTier配置
        cat >> .config <<EOF
# ZeroTier核心功能
CONFIG_FIRMWARE_INCLUDE_ZEROTIER=y
CONFIG_FIRMWARE_INCLUDE_ZEROTIER_CLI=y

# Web界面支持
CONFIG_FIRMWARE_INCLUDE_ZEROTIER_UI=$([[ "$UI_ENABLE" == "true" ]] && echo "y" || echo "n")

# 空间优化配置
CONFIG_FIRMWARE_INCLUDE_ADBYBY=n
CONFIG_FIRMWARE_INCLUDE_XRAY=n
CONFIG_FIRMWARE_INCLUDE_V2RAY=n
CONFIG_FIRMWARE_INCLUDE_SSSERVER=n
EOF

    - name: Build Firmware
      run: |
        cd padavan-4.4/trunk
        sudo ./clear_tree
        
        # 带块大小限制的构建命令
        if ! sudo ./build_firmware_modify $DEVICE_MODEL $BLOCK_SIZE ; then
          echo "::warning::首次构建失败，尝试空间优化重建..."
          make clean
          sudo ./build_firmware_modify $DEVICE_MODEL $((BLOCK_SIZE - 1024))
        fi
        
        # 产物验证
        if ls images/*.trx; then
          sudo mkdir -p /opt/output/
          sudo mv images/*.trx /opt/output/
        else
          echo "::error::未找到固件文件"
          exit 1
        fi

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.DEVICE_MODEL }}-Firmware
        path: /opt/output/*.trx
