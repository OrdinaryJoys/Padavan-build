name: Padavan AutoBuilder

on:
  workflow_dispatch:
  push:
    tags: ['v*']

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      DEVICE: K2P
      BLOCK_SIZE: 15872
      ZT_ENABLED: "y"
      TOOLCHAIN_DIR: ${{ github.workspace }}/padavan-4.4/toolchain-mipsel/toolchain-4.4.x

    steps:
    # ========== 代码检出 ==========
    - name: Checkout code
      uses: actions/checkout@v4

    # ========== 依赖安装 ==========
    - name: Install dependencies
      run: |
        sudo apt-get update -y
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
          unzip libtool-bin curl cmake gperf gawk flex bison \
          fakeroot kmod cpio git python3-docutils gettext automake autopoint \
          texinfo build-essential help2man pkg-config zlib1g-dev libgmp3-dev \
          libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget libc-dev-bin \
          libssl-dev libjson-c-dev libc6-i386

    # ========== 源码准备 ==========
    - name: Prepare source
      run: |
        git clone --depth=1 https://github.com/hanwckf/padavan-4.4.git || { echo "::error::Clone failed"; exit 1; }
        cd padavan-4.4/toolchain-mipsel
        ./dl_toolchain.sh || { echo "::error::Toolchain download failed"; exit 1; }
        chmod -R +x toolchain-4.4.x/bin
        sudo mkdir -p /opt/images

    # ========== 配置阶段 ==========
    - name: Configure firmware
      shell: bash
      run: |
        cd padavan-4.4/trunk

        # 修复路径硬编码问题
        find . -type f -exec sed -i "s|/toolchain-4.4.x|$TOOLCHAIN_DIR|g" {} \;

        # 准备xTun组件
        [ -d user/xTun ] || git clone --depth=1 https://github.com/hanwckf/xTun.git user/xTun

        # 应用设备配置
        cp -vf configs/templates/${DEVICE}.config .config
        echo "CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=y" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_ZEROTIER=${ZT_ENABLED}" >> .config

        # 设置编译环境
        echo "export PATH=${TOOLCHAIN_DIR}/bin:\$PATH" >> env.sh
        echo "export CROSS_COMPILE=${TOOLCHAIN_DIR}/bin/mipsel-linux-uclibc-" >> env.sh
        echo "export ARCH=mips" >> env.sh
        source env.sh

    # ========== 构建阶段 ==========
    - name: Build firmware
      run: |
        cd padavan-4.4/trunk
        source env.sh

        # 清理并构建
        sudo ./clear_tree
        fakeroot ./build_firmware_modify ${DEVICE} ${BLOCK_SIZE} 2>&1 | tee build.log

        # 处理构建结果
        if [ ! -f images/*.trx ]; then
          echo "::error::Build failed, last 50 lines:"
          tail -n 50 build.log
          exit 1
        fi
        sudo mv images/*.trx /opt/images/

    # ========== 产物上传 ==========
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.DEVICE }}-Firmware-$(date +%Y%m%d-%H%M%S)
        path: /opt/images/*.trx
