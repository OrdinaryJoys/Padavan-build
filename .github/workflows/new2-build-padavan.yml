name: Build Padavan with ZeroTier

on: 
  release:
    types: [published]
  push:
    tags:
    - 'v*'
  workflow_dispatch:
    inputs:
      tname:
        description: '设备型号名称 (对应configs/templates/目录下的配置名)'
        required: false
        default: 'K2P'
  #  branches: 
  #    - master
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: [started]
    
jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master
      
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y unzip libtool-bin curl cmake gperf gawk flex bison nano xxd \
             fakeroot kmod cpio git python3-docutils gettext automake autopoint \
             texinfo build-essential help2man pkg-config zlib1g-dev libgmp3-dev \
             libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev libc-dev-bin \
             libssl-dev libjson-c-dev

    # ========== ZeroTier集成核心步骤 ==========
    - name: Prepare ZeroTier integration
      run: |
        # 克隆Padavan源码
        git clone --depth=1 https://github.com/hanwckf/padavan-4.4.git
        cd padavan-4.4
        
        # 下载ZeroTier源码
        git clone https://github.com/zerotier/ZeroTierOne trunk/user/zerotier
        
        # 修改存储路径
        sed -i 's|/var/lib/zerotier-one|/etc/storage/zerotier-one|g' trunk/user/zerotier/osdep/OSUtils.cpp
        
        # 创建初始化脚本
        mkdir -p trunk/user/zerotier/files
        cat << 'EOF' > trunk/user/zerotier/files/zerotier.init
        #!/bin/sh
        ENABLED=$(nvram get zt_enable)
        [ "$ENABLED" != "1" ] && exit 0
        /usr/bin/zerotier-one -d
        sleep 5
        NETWORK_ID=$(nvram get zt_network)
        [ -n "$NETWORK_ID" ] && zerotier-cli join $NETWORK_ID
        EOF
        chmod +x trunk/user/zerotier/files/zerotier.init
        
        # 注册Web界面
        cd trunk/user/www/n56u_ribbon_fixed
        sed -i "/'VPN'/a\\\t{ title: 'ZeroTier', url: 'zerotier.asp' }," state.js
        cat << 'EOF' > zerotier.asp
        <% css_add("zerotier.css") %>
        <% js_add("zerotier.js") %>
        <div class="header">
          <h1>ZeroTier配置</h1>
        </div>
        <div class="content">
          <form method="post">
            <fieldset>
              <legend>网络ID</legend>
              <input type="text" name="zt_network" value="<% nvram_get_x("","zt_network"); %>">
            </fieldset>
            <div class="apply_gen">
              <input type="button" class="button_gen" value="保存设置" onclick="applyRule();">
            </div>
          </form>
        </div>
        EOF

    - name: Clone toolchain
      run: |
        cd padavan-4.4/toolchain-mipsel
        sh dl_toolchain.sh
        mkdir -p /opt/images/

    # ========== 增强编译配置 ==========
    - name: Configure firmware
      env:
        TNAME: K2P  # 修改为你的设备型号
      run: |
        cd padavan-4.4/trunk
        
        # 基础配置
        cp -f configs/templates/$TNAME.config .config
        
        # 清除旧配置
        sed -i '/CONFIG_FIRMWARE_INCLUDE_ZEROTIER/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_JSONC/d' .config
        
        # 必需依赖
        echo "CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=y" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_JSONC=y" >> .config
        
        # ZeroTier核心配置
        echo "CONFIG_FIRMWARE_INCLUDE_ZEROTIER=y" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_ZEROTIER_WEBUI=y" >> .config
        
        # 移除不需要的功能
        disable_features=(
          "MENTOHUST" "SCUTCLIENT" "SHADOWSOCKS" "SSOBFS" "ADBYBY"
          "DNSFORWARDER" "XRAY" "V2RAY" "DDNSTO" "ALDRIVER" 
          "TROJAN" "KOOLPROXY" "CADDY" "ADGUARDHOME" "WYY"
        )
        for feature in "${disable_features[@]}"; do
          sed -i "/CONFIG_FIRMWARE_INCLUDE_${feature}/d" .config
          echo "CONFIG_FIRMWARE_INCLUDE_${feature}=n" >> .config
        done

    # ========== 增强编译流程 ==========
    - name: Build Firmware
      env:
        TNAME: K2P  # 修改为你的设备型号
      run: |
        cd padavan-4.4/trunk
        
        # 修复权限问题
        chmod -R 755 toolchain-mipsel/toolchain-4.4.x/bin/*
        find toolchain-mipsel -type f -exec chmod 644 {} \;
        
        # 编译前清理
        sudo ./clear_tree
        
        # 并行编译优化
        CPU_CORES=$(grep -c ^processor /proc/cpuinfo)
        make -j$((CPU_CORES + 1)) V=99 2>&1 | tee build.log
        
        # 错误捕获
        if grep -q 'Error [0-9]' build.log; then
          echo "::error::发现编译错误，请检查日志！"
          exit 1
        fi
        
        # 移动产物
        sudo mv -f images/*.trx /opt/images/

    - name: Upload artifacts
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: Padavan-ZeroTier
        path: /opt/images
