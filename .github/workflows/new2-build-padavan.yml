#修改TNAME: K2P 中的K2P为你需要编译的型号，注意名称要与configs/templates/目录下的名字相同
name: Build Padavan with ZeroTier

on: 
  release:
    types: [published]
  push:
    tags:
    - 'v*'
  #  branches: 
  #    - master
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: [started]
  schedule:
    - cron: '0 3,20 * * *'
  workflow_dispatch:

permissions:
  contents: write
  actions: write

env:
  TZ: Asia/Shanghai

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      ver: ${{ steps.getversion.outputs.ver }}
      cver: ${{ steps.getversion.outputs.cver }}
    steps:
      - name: 检查更新
        id: getversion
        run: |
          ver=`curl https://api.github.com/repos/zerotier/ZeroTierOne/releases/latest | jq -r '.tag_name'`
          cver=`curl https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name'`
          echo "最新版本${ver} 当前版本${cver}"
          echo "ver=${ver}" >> $GITHUB_OUTPUT
          echo "cver=${cver}" >> $GITHUB_OUTPUT
      - name: delete-workflow
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          retain_days: 0
          keep_minimum_runs: 0

  build-zerotier:
    needs: check
    if: ${{ needs.check.outputs.ver != needs.check.outputs.cver }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - TARGET: arm7l-koolshare
            OS: ubuntu-latest
            GCC: arm-linux-musleabi
          - TARGET: arm7l-swrt
            OS: ubuntu-latest
            GCC: arm-linux-musleabi
          - TARGET: arm7l-opt
            OS: ubuntu-latest
            GCC: arm-linux-musleabi
          - TARGET: arm7l-etc
            OS: ubuntu-latest
            GCC: arm-linux-musleabi
          - TARGET: mipsel
            OS: ubuntu-latest
            GCC: mipsel-linux-muslsf
          - TARGET: mipsel-opt
            OS: ubuntu-latest
            GCC: mipsel-linux-muslsf
    runs-on: ${{ matrix.OS }}
    env:
      TARGET: ${{ matrix.TARGET }}
      OS: ${{ matrix.OS }}
      GCC: ${{ matrix.GCC }}
    steps:
      - uses: actions/checkout@v4
      - name: 下载编译工具链
        run: |
          echo -e "\n\033[42;31;5;1m 开始克隆${{ needs.check.outputs.ver }}源码... \n\033[0m"
          git clone https://github.com/zerotier/ZeroTierOne -b ${{ needs.check.outputs.ver }} /opt/zt
          case $TARGET in 
              mipsel)
                MUSL_URI=mipsel-linux-muslsf-cross
                ;;
              mipsel-opt)
                MUSL_URI=mipsel-linux-muslsf-cross
                ;;
              arm7l-koolshare)
                MUSL_URI=arm-linux-musleabi-cross
                ;;
              arm7l-swrt)
                MUSL_URI=arm-linux-musleabi-cross
                ;;
              arm7l-opt)
                MUSL_URI=arm-linux-musleabi-cross
                ;;
              arm7l-etc)
                MUSL_URI=arm-linux-musleabi-cross
                ;;
            esac
          echo "MUSL_URI=${MUSL_URI}" >> $GITHUB_ENV
          mkdir -p /opt/musl_gcc 
          echo -e "\n\033[42;31;5;1m 开始下载musl工具链.. \n\033[0m"
          wget -q -c https://musl.cc/$MUSL_URI.tgz -P /opt/musl_gcc/
          echo -e "\n\033[42;31;5;1m 开始解压musl工具链.. \n\033[0m"
          tar -xf /opt/musl_gcc/$MUSL_URI.tgz -C /opt/musl_gcc/
          echo -e "\n\033[42;31;5;1m 查看musl-gcc信息 \n\033[0m"
          /opt/musl_gcc/$MUSL_URI/bin/${{ matrix.GCC }}-gcc -v
      - 
        name: 编译zerotier
        shell: bash
        run: |
          cd /opt/zt
          echo -e "\n\033[42;31;5;1m 修改zerotier源码 \n\033[0m"
          sed -i 's|-fPIC -fPIE|-fPIC -fPIE -static|g' ./make-linux.mk
          sed -i '/include objects.mk/i    LDLIBS+=-latomic' ./make-linux.mk
          sed -i 's|override CFLAGS+=-march=armv5t -mfloat-abi=soft -msoft-float -mno-unaligned-access -marm|override CFLAGS+=-mfloat-abi=soft -msoft-float -mno-unaligned-access -marm|g' ./make-linux.mk
          sed -i 's|override CXXFLAGS+=-march=armv5t -mfloat-abi=soft -msoft-float -mno-unaligned-access -marm|override CXXFLAGS+=-mfloat-abi=soft -msoft-float -mno-unaligned-access -marm|g' ./make-linux.mk
          sed -i 's|override CFLAGS+=-mfloat-abi=hard -march=armv6zk -marm -mfpu=vfp -mno-unaligned-access -mtp=cp15 -mcpu=arm1176jzf-s|override CFLAGS+=-mfloat-abi=soft -msoft-float -mno-unaligned-access -marm|g' ./make-linux.mk
          sed -i 's|override CXXFLAGS+=-mfloat-abi=hard -march=armv6zk -marm -mfpu=vfp -fexceptions -mno-unaligned-access -mtp=cp15 -mcpu=arm1176jzf-s|override CXXFLAGS+=-mfloat-abi=soft -msoft-float -mno-unaligned-access -marm|g' ./make-linux.mk
          if [[ $TARGET == mipsel ]] ; then
          echo -e "\n\033[42;31;5;1m 修改mipsel架构密钥存储路径 \n\033[0m"
          sed -i 's|/var/lib/zerotier-one|/etc/storage/zerotier-one|g' ./osdep/OSUtils.cpp
          fi
          if [[ $TARGET == mipsel-opt ]] ; then
          echo -e "\n\033[42;31;5;1m 修改mipsel架构Entware密钥存储路径 \n\033[0m"
          sed -i 's|/var/lib/zerotier-one|/opt/var/lib/zerotier-one|g' ./osdep/OSUtils.cpp
          fi
          if [[ $TARGET == arm7l-opt ]] ; then
          echo -e "\n\033[42;31;5;1m 修改arm7l架构Entware密钥存储路径 \n\033[0m"
          sed -i 's|/var/lib/zerotier-one|/opt/var/lib/zerotier-one|g' ./osdep/OSUtils.cpp
          fi
          if [[ $TARGET == arm7l-etc ]] ; then
          echo -e "\n\033[42;31;5;1m 修改arm7l架构Entware密钥存储路径 \n\033[0m"
          sed -i 's|/var/lib/zerotier-one|/etc/zerotier-one|g' ./osdep/OSUtils.cpp
          fi
          if [[ $TARGET == arm7l-koolshare ]] ; then
          echo -e "\n\033[42;31;5;1m 修改arm7l架构koolshare密钥存储路径 \n\033[0m"
          sed -i 's|/var/lib/zerotier-one|/koolshare/configs/zerotier-one|g' ./osdep/OSUtils.cpp
          fi
          if [[ $TARGET == arm7l-swrt ]] ; then
          echo -e "\n\033[42;31;5;1m 修改arm7l架构swrt密钥存储路径 \n\033[0m"
          sed -i 's|/var/lib/zerotier-one|/jffs/softcenter/etc/zerotier-one|g' ./osdep/OSUtils.cpp
          fi
          cat ./osdep/OSUtils.cpp | grep /zerotier-one
          if [ $(cat ./osdep/LinuxEthernetTap.cpp | grep -c "ioctl(sock, SIOCSIFHWADDR, (void") -eq 2 ]; then
          MAC="$(grep -n "ioctl(sock, SIOCSIFHWADDR, (void" ./osdep/LinuxEthernetTap.cpp | head -2 | tail -1 | awk '{print $1}' | tr -d ": ")" && echo -e "\n\033[42;31;5;1m 删除第 ${MAC} 行 \n\033[0m" &&  sed -i "$((MAC)),+5d" ./osdep/LinuxEthernetTap.cpp && cat ./osdep/LinuxEthernetTap.cpp | grep MAC
          fi
          sed -i '/ifr.ifr_flags |= IFF_UP;/a\ \ \ \ ifr.ifr_flags &= ~IFF_NOARP;\n\ \ \ \ ifr.ifr_flags &= ~IFF_NOTRAILERS;' ./osdep/LinuxEthernetTap.cpp
          echo -e "\n\033[42;31;5;1m 设置编译环境变量 \n\033[0m"
          sudo timedatectl set-timezone "Asia/Shanghai"
          export PATH=$PATH:/opt/musl_gcc/${{ env.MUSL_URI }}/bin
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/musl_gcc/${{ env.MUSL_URI }}/${{ matrix.GCC }}/lib
          export CC=${{ matrix.GCC }}-gcc
          export CXX=${{ matrix.GCC }}-g++
          export AR=${{ matrix.GCC }}-ar
          export LD=${{ matrix.GCC }}-ld
          export RANLIB=${{ matrix.GCC }}-ranlib
          export STRIP=${{ matrix.GCC }}-strip
          export CFLAGS="-I /opt/musl_gcc/${{ env.MUSL_URI }}/${{ matrix.GCC }}/include -L /opt/musl_gcc/${{ env.MUSL_URI }}/${{ matrix.GCC }}/lib -Wl,--gc-sections -Os -ffunction-sections -fdata-sections -D_GNU_SOURCE -D_BSD_SOURCE -fPIE"
          export CXXFLAGS="$CFLAGS"
          export TARGET_CFLAGS=" -DNDEBUG -DBOOST_NO_FENV_H -DBOOST_DISABLE_ASSERTS"
          echo -e "\n\033[42;31;5;1m 开始编译... \n\033[0m"
          CC=${{ matrix.GCC }}-gcc \
          STRIP=${{ matrix.GCC }}-strip \
          ZT_STATIC=1 \
          OSTYPE="Linux" \
          make
      - 
        name: 剥离压缩
        run: |
          echo -e "\n\033[42;31;5;1m 开始下载指定版本upx \n\033[0m"
          git clone https://github.com/lmq8267/cloudflared.git /opt/st
          tar -xf /opt/st/upx-3.95-amd64_linux.tar.xz -C /opt
          chmod 777 /opt/upx-3.95-amd64_linux/upx
          tar -xf /opt/st/upx-4.1.0-amd64_linux.tar.xz -C /opt
          chmod 777 /opt/upx-4.1.0-amd64_linux/upx
          cd /opt/zt
          echo -e "\n\033[42;31;5;1m 查看二进制程序信息 \n\033[0m"
          file zerotier-one
          strings zerotier-one | grep /zerotier-one
          echo -e "\n\033[42;31;5;1m 查看原始体积 \n\033[0m"
          du -k zerotier-one
          echo -e "\n\033[42;31;5;1m 开始剥离... \n\033[0m"
          /opt/musl_gcc/${{ env.MUSL_URI }}/bin/${{ matrix.GCC }}-strip zerotier-one
          echo -e "\n\033[42;31;5;1m 查看剥离后的体积 \n\033[0m"
          du -k zerotier-one
          echo -e "\n\033[42;31;5;1m 开始upx压缩... \n\033[0m"
          if [[ $TARGET == mipsel ]] || [[ $TARGET == mipsel-opt ]] ; then
          /opt/upx-3.95-amd64_linux/upx --lzma --best zerotier-one
          else
          /opt/upx-4.1.0-amd64_linux/upx --lzma --best zerotier-one
          fi
          echo -e "\n\033[42;31;5;1m 查看压缩后的体积 \n\033[0m"
          du -k zerotier-one
          echo -e "\n\033[42;31;5;1m 编译时间：$(date '+%Y-%m-%d %H:%M:%S') \n\033[0m"
          echo "build_time=$(date '+%Y年%m月%d日%H:%M:%S' | jq -sRr @uri)" >> $GITHUB_ENV
      - 
        name: 打包上传
        shell: bash
        run: |
         BASE=`pwd`
         if [[ $TARGET == mipsel ]] ; then
         mkdir -p /opt/bin/zerotier-one
         echo -e "\n\033[42;31;5;1m 打包padavan的zerotier \n\033[0m"
         cp /opt/zt/zerotier-one /opt/bin/zerotier-one/zerotier-one
         ln -sf /opt/bin/zerotier-one/zerotier-one /opt/bin/zerotier-one/zerotier-cli
         ln -sf /opt/bin/zerotier-one/zerotier-one /opt/bin/zerotier-one/zerotier-idtool
         cd /opt/bin
         tar czvf zerotier.tar.gz zerotier-one
            if [[ $TARGET == mipsel ]] ; then
            echo $(md5sum /opt/bin/zerotier.tar.gz | awk '{print $1;}') >tarMD5.txt
            cd /opt/bin/zerotier-one
            echo $(md5sum /opt/bin/zerotier-one/zerotier-one | awk '{print $1;}') >MD5.txt
            git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
            cd $BASE
            [ ! -d "install/${{ needs.check.outputs.ver }}" ] && mkdir -p "install/${{ needs.check.outputs.ver }}"
            cp -rf /opt/bin/zerotier-one/zerotier-one install/${{ needs.check.outputs.ver }}/zerotier-one
            cp -rf /opt/bin/zerotier-one/MD5.txt install/${{ needs.check.outputs.ver }}/MD5.txt
            cp -rf /opt/bin/zerotier.tar.gz install/${{ needs.check.outputs.ver }}/zerotier.tar.gz
            cp -rf /opt/bin/tarMD5.txt install/${{ needs.check.outputs.ver }}/tarMD5.txt
            git add .
            git commit -am "上传时间： $(date '+%Y-%m-%d %H:%M:%
